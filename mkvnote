#!/bin/bash

MKV_TAG_SET_JPC=(
    "COLLECTION"
    "TITLE"
    "CATALOG_NUMBER"
    "DESCRIPTION"
    "DATE_DIGITIZED"
    "ENCODER_SETTINGS"
    "ENCODED_BY"
    "ORIGINAL_MEDIA_TYPE"
    "DATE_TAGGED"
    "TERMS_OF_USE"
    "_TECHNICAL_NOTES"
    "_ORIGINAL_FPS"
)

MKV_TAG_SET_NMAAHC=(
    "COLLECTION"
    "TITLE"
    "CATALOG_NUMBER"
    "DESCRIPTION"
    "DATE_DIGITIZED"
    "ENCODER_SETTINGS"
    "ENCODED_BY"
    "ORIGINAL_MEDIA_TYPE"
    "DATE_TAGGED"
    "TERMS_OF_USE"
    "_TECHNICAL_NOTES"
    "_ORIGINAL_FPS"
    "_TAGTAG"
)

BOLD=$(tput bold)
RESET=$(tput sgr0)
GB=$(tput setaf 38)
ERROR=$(tput setaf 1)

_usage(){
    cat <<EOF

    $(basename "${0}")

    Usage: $(basename "${0}") [-p|--profile <profile>] /path/to/file

EOF
    exit
}

SELECTED_PROFILE=""
SELECTED_TAG_SET=()

OPTIND=1
while getopts ":hp:" opt ; do
    case "${opt}" in
        p) SELECTED_PROFILE="${OPTARG}" ;;
        h) _usage ;;
        :) echo "Option -${OPTARG} requires an argument" ; _usage ;;
        *) echo "bad option -${OPTARG}" ; _usage ;;
    esac
done
shift "$((OPTIND-1))"

if [[ "${#}" -eq 0 ]]; then
    _usage
fi

INPUT_FILE="${1}"
EXTENSION="${INPUT_FILE##*.}"

if [[ "${SELECTED_PROFILE}" == "jpc" ]] ; then
    SELECTED_TAG_SET=("${MKV_TAG_SET_JPC[@]}")
elif [[ "${SELECTED_PROFILE}" == "nmaahc" ]] ; then
    SELECTED_TAG_SET=("${MKV_TAG_SET_NMAAHC[@]}")
else
    unset SELECTED_PROFILE
    echo -e "${BOLD}${ERROR}\nNote: Invalid profile or no profile specified with -p. You will be prompted to select a profile.${RESET}"
fi

_maketemp(){
    mktemp -q -t "$(basename "${0}")"
    if [ "${?}" -ne 0 ]; then
        echo "${0}: ${ERROR}Can't create temp file, exiting...${RESET}"
        exit 1
    fi
}

if [ -z "${SELECTED_PROFILE}" ]; then
    echo -e "${GB}\nAvailable tag profiles and their respective tags:${RESET}"
    echo -e "${BOLD}\n1) JPC profile tags:${RESET}"
    for TAG in "${MKV_TAG_SET_JPC[@]}"; do
        echo -e "    - $TAG"
    done
    echo -e "${BOLD}\n2) NMAAHC profile tags:${RESET}"
    for TAG in "${MKV_TAG_SET_NMAAHC[@]}"; do
        echo -e "    - $TAG"
    done

    while true; do
        echo -e "${GB}${BOLD}\nYou must select a tag profile."
        echo -e "Press 1 for JPC, 2 for NMAAHC, or 0 to exit.\n"
        read -p "Enter your choice: ${RESET}" choice
        case "$choice" in
            1)
                SELECTED_TAG_SET=("${MKV_TAG_SET_JPC[@]}")
                SELECTED_PROFILE="jpc"
                break
                ;;
            2)
                SELECTED_TAG_SET=("${MKV_TAG_SET_NMAAHC[@]}")
                SELECTED_PROFILE="nmaahc"
                break
                ;;
            0)
                echo -e "${ERROR}\nExiting...${RESET}"
                exit 0
                ;;
            *)
                echo "Invalid choice. Please try again."
                ;;
        esac
    done
fi

LIST_OF_KEYS=()
EXISTING_TAGS="$(_maketemp).txt"
XML_DRAFT="$(_maketemp).xml"
mkvextract tags "${INPUT_FILE}" | xmlstarlet sel -t -m "/Tags/Tag[Targets='' or not(Targets) or (Targets/TargetTypeValue='50' and not(Targets/TrackUID))]/Simple" -v "Name" -n >> "${EXISTING_TAGS}"

while read EXISTING_KEY ; do
    DIALOG_LIST+="${EXISTING_KEY} "
    LIST_OF_KEYS+=("${EXISTING_KEY}")
done < "${EXISTING_TAGS}"

for PROFILE_TAG in "${SELECTED_TAG_SET[@]}" ; do
    if [[ ! " ${DIALOG_LIST[*]} " =~ [[:space:]]${PROFILE_TAG}[[:space:]] ]] ; then
        LIST_OF_KEYS+=("${PROFILE_TAG}")
    fi
done

launch_switftdialog_tag_editor(){
    DIALOG_FORM_JSON="$(_maketemp).json"
    XML_DRAFT="$(_maketemp).xml"

    echo '{"title": "mkvnote tag editor", "message": "Edit or enter tags below. Empty fields will not be saved.", "icon": "info", "titlefont": "size=22", "messagefont": "size=14", "width": 1000, "height": 700, "scrollable": true, "blurscreen": false, "moveable": true, "ontop": true, "button1text": "Tag-On!", "button2text": "Cancel", "textfield": [' > "${DIALOG_FORM_JSON}"

    FIRST=1
    for TAG_KEY in "${LIST_OF_KEYS[@]}"; do
        VALUE=$(mkvextract tags "${INPUT_FILE}" | \
            xmlstarlet sel -t -m "/Tags/Tag[not(Targets)]/Simple[Name='${TAG_KEY}']" -v "String")

        [[ ${FIRST} -eq 0 ]] && echo "," >> "${DIALOG_FORM_JSON}"
        FIRST=0

        ESCAPED_KEY=$(echo "${TAG_KEY}" | sed 's/"/\\"/g')
        DEFAULT_ESCAPED=$(printf '%s' "${VALUE}" | sed 's/"/\\"/g')
        echo "  {\"title\": \"${ESCAPED_KEY}\", \"prompt\": \"Enter value for ${ESCAPED_KEY}\", \"default\": \"${DEFAULT_ESCAPED}\"}" >> "${DIALOG_FORM_JSON}"
    done

    echo "]}" >> "${DIALOG_FORM_JSON}"

    cat "${DIALOG_FORM_JSON}" | jq . || echo "Warning: JSON is invalid"
    DIALOG_RESULT_JSON="$(_maketemp).json"
    dialog --jsonfile "${DIALOG_FORM_JSON}" --json > "${DIALOG_RESULT_JSON}"
    cat "${DIALOG_RESULT_JSON}" > /tmp/debug_dialog_result.txt
    cat /tmp/debug_dialog_result.txt
    DIALOG_RESULT=$(jq -c . "${DIALOG_RESULT_JSON}")
    cat /tmp/debug_dialog_result.txt

    EXIT_STATUS=$(echo "${DIALOG_RESULT}" | jq -r '.button_pressed')

    if [[ "${EXIT_STATUS}" == "Cancel" ]]; then
        echo "Canceled."
        exit
    fi

    TAG_INSERTS=""
    for TAG_KEY in "${LIST_OF_KEYS[@]}"; do
        VALUE=$(jq -r --arg key "${TAG_KEY}" '.[$key] // empty' "${DIALOG_RESULT_JSON}")
        if [[ -n "${VALUE// /}" ]]; then
            TAG_INSERTS+="<Simple><Name>${TAG_KEY}</Name><String>${VALUE}</String></Simple>"
        fi
    done

    if [[ -n "${TAG_INSERTS}" ]]; then
        echo "<Tags><Tag>${TAG_INSERTS}</Tag></Tags>" > "${XML_DRAFT}"
        mkvpropedit --tags "global:${XML_DRAFT}" "${INPUT_FILE}"
        cowsay "Cool. Done. Enjoy. Tag-on. ${INPUT_FILE}"
    else
        echo "${ERROR}No tags entered. Nothing was written.${RESET}"
    fi
}

launch_switftdialog_tag_editor
