#!/bin/bash

# The shebang above specifies that this script should be run with bash.

# Declaration of arrays containing tag names for two different sets of metadata standards: JPC and NMAAHC.
# These tags are predefined fields that will be used to store specific pieces of information about the video files.

MKV_TAG_SET_JPC=(
    "COLLECTION"
    "TITLE"
    "CATALOG_NUMBER"
    "DESCRIPTION"
    "DATE_DIGITIZED"
    "ENCODING_SETTINGS"
    "ENCODED_BY"
    "ORIGINAL_MEDIA_TYPE"
    "DATE_TAGGED"
    "TERMS_OF_USE"
    "_TECHNICAL_NOTES"
    "_ORIGINAL_FPS"
)

MKV_TAG_SET_NMAAHC=(
    "COLLECTION"
    "TITLE"
    "CATALOG_NUMBER"
    "DESCRIPTION"
    "DATE_DIGITIZED"
    "ENCODING_SETTINGS"
    "ENCODED_BY"
    "ORIGINAL_MEDIA_TYPE"
    "DATE_TAGGED"
    "TERMS_OF_USE"
    "_TECHNICAL_NOTES"
    "_ORIGINAL_FPS"
    "_TAGTAG" # Unique to the NMAAHC set, suggesting an additional, possibly custom, tag.
)

# Color variables for formatting output text. Utilizes `tput` for setting text styles and colors.
# These variables enhance readability and user interface experience.

BOLD=$(tput bold) # Sets bold style for text.
RESET=$(tput sgr0) # Resets text style to default.
GB=$(tput setaf 38) # Sets color of text to greenish-blue.
# Function _usage prints the script's usage instructions to the console.
# It's invoked when the script is run without arguments or if the user needs help.

_usage(){
    cat <<EOF

    $(basename "${0}")

    This application will embed key:value pairs ("tags") into a Matroska file in accordance with NMAAHC guidelines.

    Usage: $(basename "${0}") [-p|--profile <profile>] /path/to/file

    Some key:value pairs have controlled vocabulary.

    Tags:
    ${BOLD}${GB}_IDENTIFIER${RESET}
    Free text.
    Enter in NMAAHC Object ID#. 
    ex. 2012.79.1.16.1a

    ${BOLD}${GB}_ALTERNATE_IDENTIFIER${RESET}
    Free text. 
    Enter in NMAAHC TR#. 
    ex. TR2011-71.173

    ${BOLD}${GB}TITLE${RESET}
    Free text. 
    Please provide a title for this file. 
    ex. Black Journal: Alice Coltrane

    ${BOLD}${GB}DESCRIPTION${RESET}
    Free text. 
    Please provide a brief description of the content in this file. 
    ex. A segment from the public television series Black Journal focusing the life and music of Alice Coltrane 
    and her children in the wake of the death of her husband, famed jazz musician John Coltrane.
    This film was shot sometime during 1970; three years after the death of John Coltrane. 
    She discusses her musical career and how she balances that with being a mother and paying tribute to her late husband, 
    but also not want   

    ${BOLD}${GB}DATE_DIGITIZED${RESET}

    ${BOLD}${GB}ORIGINAL_MEDIA_FORMAT${RESET}
    Controlled vocab. 
    Please choose the original format this file was derived from.
    controlled vocab list:
        1 inch videotape
        2 inch videotape
        ½ inch videotape
        U-matic
        Betacam
        Betamax
        Digital Betacam
        VHS
        MiniDV
        D2
        DVD
        Hi-8
        8mm film
        Super 8mm film
        16mm film
        Super 16mm film
        35mm film

    ${BOLD}${GB}_ORIGINAL_PROJECTION_SPEED${RESET}
    If the originating format for this file was motion picture film, please provide a projection speed.
    ex. 24fps, 18fps, etc.

    ${BOLD}${GB}_CODING_HISTORY${RESET}
    Please provide a coding history for this file. 
    ex. O=VHS, C=Color, S=Analog, VS= NTSC, F=24, A=4:3, R=640×480, 
    T=Sony SVO-5800, O=FFV1mkv, C=Color, V=Composite, S=Analog Stereo, 
    F=24, A=4:3, W=10-bit, R=640×480, M=YUV422p10, T=Blackmagic UltraStudio 4K Mini SN123456, ffmpeg vrecord, in-house, 
    O=FFV1mkv, W=10-bit, R640x480, MYUV422p10 N=Emily Nabasny

    ${BOLD}${GB}_TECHNICAL_TRANSFER_NOTES${RESET}

    ${BOLD}${GB}_CAMERERA_MAKE_MODEL${RESET}
    Controlled vocab.
    For files created from digital camera cards. 
    controlled vocab list:
        Canon C300
        Canon C100

    ${BOLD}${GB}_CAMERA_CARD_SCRIPT${RESET}
    Please enter the script used to repackage the original camera card into an NMAAHC AIP

    ${BOLD}${GB}_FILE_CREATOR${RESET}
    ex. Smithsonian NMAAHC

    Tags beginning with an underscore are not part of the "official" set of Matroska tags.

    See the nmaachmm README for more information on package definitions.

EOF
exit
}

# Checks if the script was run without any arguments.
# If no arguments are provided, the _usage function is called to display usage information and the script exits.

if [[ $# -eq 0 ]]; then
    _usage
fi

# Function _maketemp creates a temporary file and checks for success.
# It's used for creating temporary files for storing intermediate data.

_maketemp(){
    mktemp -q -t "$(basename "${0}")"
    if [ "${?}" -ne 0 ]; then
        echo "${0}: Can't create temp file, exiting..."
        exit 1
    fi
}

selected_profile=""
selected_tag_set=""

# Parse command line options
while [[ $# -gt 0 ]]; do
    case "$1" in
        -p|--profile)
            case "$2" in
                jpc)
                    selected_tag_set=("${MKV_TAG_SET_JPC[@]}")
                    selected_profile="jpc"
                    ;;
                nmaahc)
                    selected_tag_set=("${MKV_TAG_SET_NMAAHC[@]}")
                    selected_profile="nmaahc"
                    ;;
                *)
                    echo -e "\033[1;31m\nYou must specify a profile using -p or --profile followed by 'jpc' or 'nmaahc'.\n\033[0m"
                    echo -e "\nHere are the profiles and their respective tags:\n"
                    echo -e "\"jpc\" profile tags:"
                    for TAG in "${MKV_TAG_SET_JPC[@]}" ; do
                        echo -e "\t- $TAG"
                    done
                    echo -e "\n\"nmaahc\" profile tags:"
                    for TAG in "${MKV_TAG_SET_NMAAHC[@]}" ; do
                        echo -e "\t- $TAG"
                    done
                    exit 1
                    ;;
            esac
            shift 2
            ;;
        *)
            break
            ;;
    esac
done

if [ -z "$selected_profile" ]; then
    echo -e "\033[1;31m\nYou must specify a profile using -p or --profile followed by 'jpc' or 'nmaahc'.\n\033[0m"
    echo -e "Here are the profiles and their respective tags:\n"
    echo -e "\"jpc\" profile tags:"
    for TAG in "${MKV_TAG_SET_JPC[@]}" ; do
        echo -e "\t- $TAG"
    done
    echo -e "\n\"nmaahc\" profile tags:"
    for TAG in "${MKV_TAG_SET_NMAAHC[@]}" ; do
        echo -e "\t- $TAG"
    done
    exit 1
fi

MKV_FILE="${1}"

#todo _check_if_mkv "${MKV_FILE}"
MKV_FILE_NAME="$(basename "${MKV_FILE}")"
TAG_TEMPLATE="$(_maketemp).txt"
XML_DRAFT="$(_maketemp).xml"

echo "# Feel welcome to catalog ${MKV_FILE_NAME} here and then save this document. The resulting metadata (if any) will be embedded into the file. You may add new tags as long as the structure is: tag_name=[tag_value]." > "${TAG_TEMPLATE}"
echo "# These tags semantically are intended to describe the file as a whole and not intended to specifically refer to a particular track or attachment or other sort of piece of the file." >> "${TAG_TEMPLATE}"
echo "# Empty tags will be ignored." >> "${TAG_TEMPLATE}"
echo >> "${TAG_TEMPLATE}"
echo "# These tags already exist in the file. If you edit them here they will be overwritten when saved." >> "${TAG_TEMPLATE}"
mkvextract tags "${MKV_FILE}" | xmlstarlet sel -t -m "/Tags/Tag[Targets='' or not(Targets) or (Targets/TargetTypeValue='50' and not(Targets/TrackUID))]/Simple" -v "Name" -o "=[" -v "String" -o "]" -n >> "${TAG_TEMPLATE}"
echo >> "${TAG_TEMPLATE}"
echo "# These tags already exist in the file. If you edit them here they will be overwritten when saved." >> "${TAG_TEMPLATE}"

for TAG in "${selected_tag_set[@]}" ; do
    echo "${TAG}=[]" >> "${TAG_TEMPLATE}"
done

# present a tag template for user edits
open "${TAG_TEMPLATE}"
echo "A cataloging record is opened for ${MKV_FILE}. Edit that and save it, click any key to continue... B)"
read

# start mkv metadata xml
echo "<Tags><Tag></Tag></Tags>" > "${XML_DRAFT}"

# add metadata from tag template to mkv metadata xml
while read TAG_LINE ; do
    TAG_NAME="$(echo "${TAG_LINE}" | cut -d "=" -f1)"
    TAG_VALUE="$(echo "${TAG_LINE}" | cut -d "[" -f2 | cut -d "]" -f1)"
    if [[ -n "${TAG_VALUE// /}" ]] ; then
        xml ed --omit-decl --inplace --subnode "/Tags/Tag[not(Simple/Name='${TAG_NAME}')]" --type elem -n "Simple" --subnode "/Tags/Tag/Simple[not(Name)]" --type elem -n "Name" -v "${TAG_NAME}" --subnode "/Tags/Tag/Simple[not(String)]" --type elem -n "String" -v "${TAG_VALUE}" "${XML_DRAFT}"
    fi
done < <(grep "=\[.*\]$" "${TAG_TEMPLATE}")
mkvpropedit --tags "global:${XML_DRAFT}" "${MKV_FILE}"
cowsay "Cool. Done. Enjoy. Tag-on. ${MKV_FILE}."
